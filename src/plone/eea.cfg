[buildout]
extends =
  plone-buildout.cfg
  sources.cfg
  versions.cfg

extensions =
  plone.versioncheck

find-links =
  https://eggrepo.eea.europa.eu/simple
  https://pypi.org/simple/
  https://eggshop.eaudeweb.ro
  https://code.codesyntax.com/static/public

parts =
  zodbupdate
  ploneversioncheck
  plonesite
  standalone
  zeo_client
  zeo_async
  rel_client
  rel_async
  zopepy
  zeo

# never download an egg that is not pinned
allow-picked-versions = false
show-picked-versions = true
versions = versions
newest = false

[configuration]
debug = false
effective-user = plone

logging-dir = /data/log
file-storage = /data/filestorage/Data.fs
async-file-storage = /data/filestorage/async.fs

blob-storage = /data/blobstorage
blob-storage-cache = /data/blobstorage

memcache-address = memcached
memcache-port = 11211
memcache-size = 4096

# ZEO based configuration
shared-blob = off
zeo-client-blob-cache-size = 10000000000
zeoclient-threads = 2
zeoserver-address = zeo:8080

http-fast-listen = off
http-header-max-length = 12288
http-force-connection-close = on

zodb-cache-size = 250000
python-check-interval = 1800

# RelStorage + PostgreSQL configuration
relstorage-dbname = datafs
relstorage-user = zope
relstorage-password = zope
relstorage-blob-cache-size = 350MB
relstorage-poll-interval = 0
relstorage-address = postgres
relstorage-port = 5432
relstorage-cache-address = memcached
relstorage-cache-port = 11211
relstorage-keep-history = false
relstorage-zope-conf =
  <zodb_db async>
    mount-point /zasync
    <relstorage>
      keep-history ${configuration:relstorage-keep-history}
      poll-interval ${configuration:relstorage-poll-interval}
      cache-servers ${configuration:relstorage-cache-address}:${configuration:relstorage-cache-port}
      cache-prefix zasync
      <postgresql>
        dsn dbname='zasync' user='${configuration:relstorage-user}' host='${configuration:relstorage-address}' port='${configuration:relstorage-port}' password='${configuration:relstorage-password}'
      </postgresql>
    </relstorage>
  </zodb_db>

## zc.async multi-db (/zasync outside Data.fs, within async.fs)
#
# ... add bellow conf to your buildout
#

#plone-app-async-instance = plone.app.async-multi_db_instance
#plone-app-async-worker = plone.app.async-multi_db_worker

zeo-conf-additional =
 <filestorage 2>
   path ${configuration:async-file-storage}
 </filestorage>

zope-conf-additional =
 <zodb_db async>
   mount-point /zasync
   cache-size ${configuration:zodb-cache-size}
   <zeoclient>
     server ${configuration:zeoserver-address}
     storage 2
     name asyncstorage
     blob-dir ${configuration:blob-storage-cache}
     shared-blob-dir ${configuration:shared-blob}
     cache-size 350MB
     blob-cache-size ${configuration:zeo-client-blob-cache-size}
     blob-cache-size-check 10
   </zeoclient>
 </zodb_db>

eggs =
  ${buildout:eggs}
  raven
  psycopg2
  pylibmc
  RelStorage
  pas.plugins.ldap
  eea.aliases
  eea.banner
  eea.facetednavigation
  eea.faceted.inheritance
  eea.graylogger
  eea.sentry
  eea.kitkat
  collective.volto.subsites
  collective.exportimport
  Products.PloneHotfix20210518

zcml =
  ${buildout:zcml}

zcml-additional = ${instance:zcml-additional}
products =
dbclient-environment-vars =
test-packages =

[ploneversioncheck]
recipe = zc.recipe.egg
eggs = plone.versioncheck

[zodbupdate]
recipe = zc.recipe.egg
eggs =
  zodbverify
  zodbupdate
  ${configuration:eggs}
#
# DB Client
#
[dbclient]
http-address = 8080
user = admin:admin
http-fast-listen = ${configuration:http-fast-listen}
http-force-connection-close = ${configuration:http-force-connection-close}
http-header-max-length = ${configuration:http-header-max-length}
effective-user = ${configuration:effective-user}

debug-mode = ${configuration:debug}
verbose-security = ${configuration:debug}

file-storage = ${configuration:file-storage}
blob-storage = ${configuration:blob-storage}

#Set the ZODB cache size, i.e. the number of objects which the ZODB cache will try to hold.
zodb-cache-size = ${configuration:zodb-cache-size}

enable-product-installation = off
python-check-interval = ${configuration:python-check-interval}

event-log-max-size = 100mb
event-log-old-files = 3
event-log-level = INFO
event-log = ${configuration:logging-dir}/${:_buildout_section_name_}.log

event-log-handler = eea.graylogger.GELFHandler
event-log-kwargs = {'level_names': True}
event-log-args = ()

access-log-handler = eea.graylogger.GELFHandler
access-log-kwargs = {'level_names': True}
access-log-args = ()

access-log-max-size = 100mb
access-log-old-files = 3
z2-log = ${configuration:logging-dir}/${:_buildout_section_name_}-Z2.log
z2-log-level = INFO

eggs = ${configuration:eggs}
zcml = ${configuration:zcml}
products = ${configuration:products}
zcml-additional = ${configuration:zcml-additional}
zope-conf-additional = ${configuration:zope-conf-additional}
environment-vars =
    ${configuration:dbclient-environment-vars}
    MEMCACHE_SERVER ${configuration:memcache-address}:${configuration:memcache-port}
    ZC_ASYNC_UUID ${buildout:directory}/var/${:_buildout_section_name_}-uuid.txt

#
# ZEO client
#
[zeo-client]
zeo-client = true
zeo-address = ${configuration:zeoserver-address}
zserver-threads = ${configuration:zeoclient-threads}
zeo-client-cache-size = 350MB
zeo-client-blob-cache-size = ${configuration:zeo-client-blob-cache-size}
zeo-client-blob-cache-size-check = 10
shared-blob = ${configuration:shared-blob}
blob-storage = ${configuration:blob-storage-cache}

[relstorage-client]
zeo-client = false
rel-storage =
  type postgresql
  keep-history ${configuration:relstorage-keep-history}
  dsn dbname='${configuration:relstorage-dbname}' user='${configuration:relstorage-user}' host='${configuration:relstorage-address}' port='${configuration:relstorage-port}' password='${configuration:relstorage-password}'
  blob-dir ${configuration:blob-storage}
  blob-cache-size ${configuration:relstorage-blob-cache-size}
  poll-interval ${configuration:relstorage-poll-interval}
  cache-servers ${configuration:relstorage-cache-address}:${configuration:relstorage-cache-port}
  cache-prefix ${configuration:relstorage-dbname}

[dbinstance]
recipe = plone.recipe.zope2instance
<= dbclient
   zeo-client

#
# Single instance
#
[standalone]
recipe = plone.recipe.zope2instance
<= dbclient
zcml =
  ${dbinstance:zcml}
#  plone.app.async-single_db_worker
zope-conf-additional =
http-fast-listen = on

#
# ZEO Client/Async
#
[zeo_client]
recipe = plone.recipe.zope2instance
<= dbclient
   zeo-client
   instance_base
zcml =
  ${dbinstance:zcml}
#  ${configuration:plone-app-async-instance}

[zeo_async]
recipe = plone.recipe.zope2instance
<= dbclient
   zeo-client
zcml =
  ${dbinstance:zcml}
#  ${configuration:plone-app-async-worker}
[zeo]
zeo-conf-additional =
  ${configuration:zeo-conf-additional}
#
# RelStorage Client/Async
#
[rel_client]
recipe = plone.recipe.zope2instance
<= dbclient
   relstorage-client
zcml =
  ${dbinstance:zcml}
#  plone.app.async-multi_db_instance
zope-conf-additional = ${configuration:relstorage-zope-conf}

[rel_async]
recipe = plone.recipe.zope2instance
<= dbclient
   relstorage-client
zcml =
  ${dbinstance:zcml}
#  plone.app.async-multi_db_worker
zope-conf-additional = ${configuration:relstorage-zope-conf}

[zopepy]
recipe = zc.recipe.egg
eggs = ${configuration:eggs}
interpreter = zopepy
scripts = zopepy
